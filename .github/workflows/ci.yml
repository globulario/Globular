name: ci
on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'   # match your local version

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - run: go mod download

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.2   # or latest available (must support Go 1.24)
          args: --timeout=5m

      - name: Test
        run: go test ./... -race -coverprofile=coverage.out

      - name: Debug jwt version
        run: |
          go mod graph | grep 'golang-jwt/jwt' || true
          go list -m -json github.com/golang-jwt/jwt/v5 || true

      - name: Debug deps selected in CI
        run: |
          echo "GOWORK=$(go env GOWORK)"
          echo "Top-level jwt version:"
          go list -m -json github.com/golang-jwt/jwt/v5 || true
          echo "All modulesâ€˜ requirements mentioning jwt:"
          grep -R --line-number --include="go.mod" 'golang-jwt/jwt' . || true
          echo "Any v5.2.1 references anywhere:"
          grep -R --line-number 'golang-jwt/jwt/v5@v5\.2\.1' . || true
          echo "Module graph view:"
          go mod graph | grep 'golang-jwt/jwt' || true

      - name: Govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: '1.24.5'
          work-dir: .
