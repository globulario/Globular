
List of certificates,
Use by gRPC services,

Client:
client.key, client.pem, client.crt

Server:
server.key, server.pem, server.crt, server.csr

Authority Thrust
ca.key, ca.crt

Multi-Domain (SAN) Certificates - Using Subject Alternative Names
san.conf

Use by Http server
domain.name.crt, domain.name.issuer.crt

So here I will decribe the sequence of creation of certificates and the command to use with open ssh to generate it...

Step 0: generate the SAN file
see the san.conf for exemple. The san.conf file will be used by following command to generate certificates. 

Step 1: Generate Certificate Authority + Trust Certificate (ca.crt)
- the first step is to generate the ca.key, the certificate authority private key.
  that file must be keep secret.
  
	openssl genrsa -passout pass:1234 -des3 -out c:/tls/ca.key
	
- Now from the genrsa file I will generate the public key, the .crt file. That certificate will be use 
  by client.
	
	openssl req -passin pass:1234 -new -x509 -days:365 -key c:/tls/ca.key -out c:/tls/ca.crt -subj "/CN=Root CA"

Setp 2: Generate the server Private Key (server.key)
- The private server key.

	openssl genrsa -passout pass:1234 -des3 -out c:/tls/server.key 4096

Setp 3: Generate a certificate signing request from the CA (server.csr) replace domain with the actual domain.
- The server certificate signing request.

	openssl req -passin pass:1234 -new -key c:/tls/server.key -out c:/tls/server.csr -subj "/CN=domain" -config c:/tls/san.conf

Step 4: Sign the certificate with the CA we create(it's called self signing) - server.crt
- Generate the server certificate and signed it with the ca. 01 is use to uniquely identify the certicate. It usefull at revokation time...

	openssl x509 -req -passin pass:1234 -days 365 -in c:/tls/server.csr -CAkey c:/tls/ca.key -set_serial 01 -out c:/tls/client.crt -extfile c:/tls/san.conf -extensions -v3_req

Step 5: Convert the server key to .pem format (server.pem) - usable by gRpc
- Pem file are container format that cant contain certicate chain, but here only the server private key will be put in.

	openssl pkcs8 -topk8 -nocrypt -passin pass:1234 -in c:/tls/server.key -out c:/tls/server.pem

Step 6: Generate client private key.
- Generate a private key for the client

	openssl genrsa -passout pass:1234 -out c:/tls/client.pass.key 4096
	openssl rsa -passin pass -in c:/tls/client.pass.key -out c:/tls/client.key
	
- Remove intermediate key file.

	rm c:/tls/client.pass.key
	

Step 7: Generate the client signing request.
- Generate a signing request for a given domain name, the domain must be the same as the CN field in the san.conf file.

	openssl req -new -key c:/tls/client.key -out c:/tls/client.csr -subj "/CN=domain" -config c:/tls/san.conf

Step 8: Generate client signed certificate.
- Now I will signed the client file with the ca.key (certificate authority private key).
	
	openssl x509 -req -passin pass:1234 -days 365 -in c:/tls/client.csr -CA c:/tls/ca.crt -CAkey c:/tls/ca.key -set_serial 01 -out c:/tls/client.crt -extfile c:/tls/san.conf -extensions -v3_req

Step 9: Convert client to pem format.

	openssl pkcs8 -topk8 -nocrypt -passin pass:1234 -in c:/tls/server.key -out c:/tls/server.pem


	